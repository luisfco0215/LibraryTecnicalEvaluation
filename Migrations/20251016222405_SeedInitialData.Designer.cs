// <auto-generated />
using System;
using LibraryTecnicalEvaluation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryTecnicalEvaluation.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20251016222405_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Autores", b =>
                {
                    b.Property<int>("Autor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Autor_Id"));

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Autor_Id");

                    b.ToTable("Autores", (string)null);

                    b.HasData(
                        new
                        {
                            Autor_Id = 1,
                            Nacionalidad = "Colombiano",
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            Autor_Id = 2,
                            Nacionalidad = "Chilena",
                            Nombre = "Isabel Allende"
                        },
                        new
                        {
                            Autor_Id = 3,
                            Nacionalidad = "Británica",
                            Nombre = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.Property<int>("Libro_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Libro_Id"));

                    b.Property<int>("Autor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Año_publicacion")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Libro_Id");

                    b.HasIndex("Autor_Id");

                    b.ToTable("Libros", (string)null);

                    b.HasData(
                        new
                        {
                            Libro_Id = 1,
                            Autor_Id = 1,
                            Año_publicacion = 1967,
                            Genero = "Realismo Mágico",
                            Titulo = "Cien Años de Soledad"
                        },
                        new
                        {
                            Libro_Id = 2,
                            Autor_Id = 2,
                            Año_publicacion = 1982,
                            Genero = "Novela",
                            Titulo = "La Casa de los Espíritus"
                        },
                        new
                        {
                            Libro_Id = 3,
                            Autor_Id = 3,
                            Año_publicacion = 1997,
                            Genero = "Fantasía",
                            Titulo = "Harry Potter y la Piedra Filosofal"
                        });
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Prestamos", b =>
                {
                    b.Property<int>("Prestamo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prestamo_Id"));

                    b.Property<DateTime?>("Fecha_Devolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Prestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("Libro_Id")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prestamo_Id");

                    b.HasIndex("Libro_Id");

                    b.ToTable("Prestamos", (string)null);

                    b.HasData(
                        new
                        {
                            Prestamo_Id = 1,
                            Fecha_Prestamo = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libro_Id = 1,
                            UsuarioId = "user1"
                        },
                        new
                        {
                            Prestamo_Id = 2,
                            Fecha_Devolucion = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Prestamo = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Libro_Id = 2,
                            UsuarioId = "user2"
                        });
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.HasOne("LibraryTecnicalEvaluation.Models.Autores", "Autores")
                        .WithMany("Libros")
                        .HasForeignKey("Autor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autores");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Prestamos", b =>
                {
                    b.HasOne("LibraryTecnicalEvaluation.Models.Libros", "Libros")
                        .WithMany("Prestamos")
                        .HasForeignKey("Libro_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libros");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Autores", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using LibraryTecnicalEvaluation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryTecnicalEvaluation.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20251016192436_InitialModels")]
    partial class InitialModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Autores", b =>
                {
                    b.Property<int>("Autor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Autor_Id"));

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Autor_Id");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.Property<int>("Libro_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Libro_Id"));

                    b.Property<int>("Autor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Año_publicacion")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Libro_Id");

                    b.HasIndex("Autor_Id");

                    b.ToTable("Libros", (string)null);
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Prestamos", b =>
                {
                    b.Property<int>("Prestamo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prestamo_Id"));

                    b.Property<DateTime?>("Fecha_Devolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Prestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("Libro_Id")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prestamo_Id");

                    b.HasIndex("Libro_Id");

                    b.ToTable("Prestamos", (string)null);
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.HasOne("LibraryTecnicalEvaluation.Models.Autores", "Autores")
                        .WithMany("Libros")
                        .HasForeignKey("Autor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autores");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Prestamos", b =>
                {
                    b.HasOne("LibraryTecnicalEvaluation.Models.Libros", "Libros")
                        .WithMany("Prestamos")
                        .HasForeignKey("Libro_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libros");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Autores", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("LibraryTecnicalEvaluation.Models.Libros", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
